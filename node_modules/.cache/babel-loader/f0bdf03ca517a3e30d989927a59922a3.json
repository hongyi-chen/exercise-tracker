{"ast":null,"code":"var _jsxFileName = \"/Users/hongyichen/Documents/exercise-tracker/src/components/create-exercise.component.js\";\n// import React, { Component  } from \"react\";\n// import DatePicker from 'react-datepicker';\n// import axios from 'axios';\n// import \"react-datepicker/dist/react-datepicker.css\";\n// export default class CreateExercises extends Component{\n//     // creating a constructor\n//     constructor(props){\n//         super(props);\n//         // binding \"this\" to each of the methods to ensure that it is binded to right thing\n//         this.onChangeUsername = this.onChangeUsername.bind(this);\n//         this.onChangeDescription = this.onChangeDescription.bind(this);\n//         this.onChangeDuration = this.onChangeDuration.bind(this);\n//         this.onChangeDate = this.onChangeDate.bind(this);\n//         this.onSubmit = this.onSubmit.bind(this);\n//         this.state = {\n//             username: '',\n//             description: '',\n//             duration: 0,\n//             date: new Date(),\n//             users: [] // state is how you create variables in react, whenever you update state, your page will update with new values\n//         }\n//     }\n//     // React lifecycle method, automatically calls right before anything displays onto page\n//     componentDidMount(){\n//         axios.get('http://localhost:5000/users/')\n//         .then(response => {\n//           if (response.data.length > 0) {\n//             this.setState({\n//               users: response.data.map(user => user.username),\n//               username: response.data[0].username\n//             })\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         })  \n//     }\n//     // whenever someone enters a username into this textbox, it'll activate this function\n//     onChangeUsername(e){\n//         //always use set state method in react\n//         this.setState({\n//             username: e.target.value // the target is the textbox, value is the value of the textbox\n//         });\n//     }\n//     onChangeDescription(e) {\n//         this.setState({\n//           description: e.target.value\n//         })\n//       }\n//       onChangeDuration(e) {\n//         this.setState({\n//           duration: e.target.value\n//         })\n//       }\n//       onChangeDate(date) {\n//         this.setState({\n//           date: date\n//         })\n//       }\n//     onSubmit(e){\n//         e.preventDefault();\n//         const exercise = {\n//             username: this.state.username,\n//             description: this.state.description,\n//             duration: this.state.duration,\n//             date: this.state.date\n//         }\n//         console.log(exercise);\n//         axios.post('http://localhost:5000/exercises/add', exercise)\n//         .then(res => console.log(res.data));\n//         // take the person back to our homepage, goes back to list of exercises. \n//         window.location = '/';\n//     }\n//     render(){\n//         return (\n//             // standard HTML form\n//             <div>\n//                 <h3>Create New Exercise Log</h3>\n//                 <form onSubmit = {this.onSubmi}>\n//                     <div className = \"form-group\">\n//                         <label>Username: </label>\n//                         <select ref = \"userInput\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.username}\n//                             onChange = {this.onChangeUsername}>\n//                                 {\n//                                     // getting the options from the users array\n//                                     // this.state.users references all of the users in our mongo db\n//                                     // .map allows us to return something for each user\n//                                     // for each user in the array, it returns an option\n//                                     this.state.users.map(function(user) {\n//                                         return <option\n//                                         key = {user}\n//                                         value = {user} > {user}\n//                                         </option>;\n//                                     })\n//                                 }\n//                             </select>\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Description: </label>\n//                         <input type = \"text\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.description}\n//                             onChange = {this.onChangeDescription}\n//                             />\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Duration(in minutes): </label>\n//                         <input type = \"text\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.duration}\n//                             onChange = {this.onChangeDuration}\n//                             />\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Date</label>\n//                         <div>\n//                             <DatePicker\n//                                 selected = {this.state.date}\n//                                 onChange = {this.onChangeDate}\n//                                 />\n//                         </div>\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <input type = \"submit\" value = \"Create Exercise Log\" className = \"btn btn-primary\" />\n//                     </div>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreateExercise extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n    console.log(exercise);\n    axios.post('http://localhost:5000/exercises/add', exercise).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Create New Exercise Log\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Username: \"), React.createElement(\"select\", {\n      ref: \"userInput\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.users.map(function (user) {\n      return React.createElement(\"option\", {\n        key: user,\n        value: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, user);\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: this.onChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Duration (in minutes): \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.duration,\n      onChange: this.onChangeDuration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Date: \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Exercise Log\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/hongyichen/Documents/exercise-tracker/src/components/create-exercise.component.js"],"names":["React","Component","axios","DatePicker","CreateExercise","constructor","props","onChangeUsername","bind","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","state","username","description","duration","date","Date","users","componentDidMount","get","then","response","data","length","setState","map","user","catch","error","console","log","e","target","value","preventDefault","exercise","post","res","window","location","render"],"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","sourcesContent":["// import React, { Component  } from \"react\";\n// import DatePicker from 'react-datepicker';\n// import axios from 'axios';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// export default class CreateExercises extends Component{\n\n//     // creating a constructor\n//     constructor(props){\n//         super(props);\n\n//         // binding \"this\" to each of the methods to ensure that it is binded to right thing\n//         this.onChangeUsername = this.onChangeUsername.bind(this);\n//         this.onChangeDescription = this.onChangeDescription.bind(this);\n//         this.onChangeDuration = this.onChangeDuration.bind(this);\n//         this.onChangeDate = this.onChangeDate.bind(this);\n//         this.onSubmit = this.onSubmit.bind(this);\n\n//         this.state = {\n//             username: '',\n//             description: '',\n//             duration: 0,\n//             date: new Date(),\n//             users: [] // state is how you create variables in react, whenever you update state, your page will update with new values\n//         }\n//     }\n\n//     // React lifecycle method, automatically calls right before anything displays onto page\n//     componentDidMount(){\n//         axios.get('http://localhost:5000/users/')\n//         .then(response => {\n//           if (response.data.length > 0) {\n//             this.setState({\n//               users: response.data.map(user => user.username),\n//               username: response.data[0].username\n//             })\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         })  \n//     }\n\n//     // whenever someone enters a username into this textbox, it'll activate this function\n//     onChangeUsername(e){\n//         //always use set state method in react\n//         this.setState({\n//             username: e.target.value // the target is the textbox, value is the value of the textbox\n//         });\n//     }\n\n//     onChangeDescription(e) {\n//         this.setState({\n//           description: e.target.value\n//         })\n//       }\n    \n//       onChangeDuration(e) {\n//         this.setState({\n//           duration: e.target.value\n//         })\n//       }\n    \n//       onChangeDate(date) {\n//         this.setState({\n//           date: date\n//         })\n//       }\n\n//     onSubmit(e){\n//         e.preventDefault();\n\n//         const exercise = {\n//             username: this.state.username,\n//             description: this.state.description,\n//             duration: this.state.duration,\n//             date: this.state.date\n//         }\n\n//         console.log(exercise);\n\n//         axios.post('http://localhost:5000/exercises/add', exercise)\n//         .then(res => console.log(res.data));\n\n//         // take the person back to our homepage, goes back to list of exercises. \n//         window.location = '/';\n//     }\n\n//     render(){\n//         return (\n//             // standard HTML form\n//             <div>\n//                 <h3>Create New Exercise Log</h3>\n//                 <form onSubmit = {this.onSubmi}>\n//                     <div className = \"form-group\">\n//                         <label>Username: </label>\n//                         <select ref = \"userInput\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.username}\n//                             onChange = {this.onChangeUsername}>\n//                                 {\n//                                     // getting the options from the users array\n//                                     // this.state.users references all of the users in our mongo db\n//                                     // .map allows us to return something for each user\n//                                     // for each user in the array, it returns an option\n//                                     this.state.users.map(function(user) {\n//                                         return <option\n//                                         key = {user}\n//                                         value = {user} > {user}\n//                                         </option>;\n//                                     })\n//                                 }\n//                             </select>\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Description: </label>\n//                         <input type = \"text\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.description}\n//                             onChange = {this.onChangeDescription}\n//                             />\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Duration(in minutes): </label>\n//                         <input type = \"text\"\n//                             required\n//                             className = \"form-control\"\n//                             value = {this.state.duration}\n//                             onChange = {this.onChangeDuration}\n//                             />\n//                     </div>\n//                     <div className = \"form-group\">\n//                         <label>Date</label>\n//                         <div>\n//                             <DatePicker\n//                                 selected = {this.state.date}\n//                                 onChange = {this.onChangeDate}\n//                                 />\n//                         </div>\n//                     </div>\n\n//                     <div className = \"form-group\">\n//                         <input type = \"submit\" value = \"Create Exercise Log\" className = \"btn btn-primary\" />\n//                     </div>\n\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n            username: response.data[0].username\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    })\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    }\n\n    console.log(exercise);\n\n    axios.post('http://localhost:5000/exercises/add', exercise)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Create New Exercise Log</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Username: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option \n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"form-group\"> \n          <label>Description: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in minutes): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Date: </label>\n          <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}