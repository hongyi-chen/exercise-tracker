{"ast":null,"code":"var _jsxFileName = \"/Users/hongyichen/Documents/exercise-tracker/src/components/create-exercise.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreateExercise extends Component {\n  // creating a constructor\n  constructor(props) {\n    super(props); // binding \"this\" to each of the methods to ensure that it is binded to right thing\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: [] // state is how you create variables in react, whenever you update state, your page will update with new values\n\n    };\n  } // React lifecycle method, automatically calls right before anything displays onto page\n\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  } // whenever someone enters a username into this textbox, it'll activate this function\n\n\n  onChangeUsername(e) {\n    //always use set state method in react\n    this.setState({\n      username: e.target.value // the target is the textbox, value is the value of the textbox\n\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n    console.log(exercise);\n    axios.post('http://localhost:5000/exercises/add', exercise).then(res => console.log(res.data)); // take the person back to our homepage, goes back to list of exercises. \n\n    window.location = '/';\n  }\n\n  render() {\n    return (// standard HTML form\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Create New Exercise Log\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Username: \"), React.createElement(\"select\", {\n        ref: \"userInput\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.username,\n        onChange: this.onChangeUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, // getting the options from the users array\n      // this.state.users references all of the users in our mongo db\n      // .map allows us to return something for each user\n      // for each user in the array, it returns an option\n      this.state.users.map(function (user) {\n        return React.createElement(\"option\", {\n          key: user,\n          value: user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \" \", user);\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Description: \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.description,\n        onChange: this.onChangeDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Duration(in minutes): \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.duration,\n        onChange: this.onChangeDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.date,\n        onChange: this.onChangeDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create Exercise Log\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/hongyichen/Documents/exercise-tracker/src/components/create-exercise.component.js"],"names":["React","Component","axios","DatePicker","CreateExercise","constructor","props","onChangeUsername","bind","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","state","username","description","duration","date","Date","users","componentDidMount","get","then","response","data","length","setState","map","user","catch","error","console","log","e","target","value","preventDefault","exercise","post","res","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateExercise extends Component{\n\n    // creating a constructor\n    constructor(props){\n        super(props);\n\n        // binding \"this\" to each of the methods to ensure that it is binded to right thing\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onChangeDuration = this.onChangeDuration.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            username: '',\n            description: '',\n            duration: 0,\n            date: new Date(),\n            users: [] // state is how you create variables in react, whenever you update state, your page will update with new values\n        }\n    }\n\n    // React lifecycle method, automatically calls right before anything displays onto page\n    componentDidMount(){\n        axios.get('http://localhost:5000/users/')\n        .then(response => {\n          if (response.data.length > 0) {\n            this.setState({\n              users: response.data.map(user => user.username),\n              username: response.data[0].username\n            })\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })  \n    }\n\n    // whenever someone enters a username into this textbox, it'll activate this function\n    onChangeUsername(e){\n        //always use set state method in react\n        this.setState({\n            username: e.target.value // the target is the textbox, value is the value of the textbox\n        })\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n          description: e.target.value\n        })\n      }\n    \n      onChangeDuration(e) {\n        this.setState({\n          duration: e.target.value\n        })\n      }\n    \n      onChangeDate(date) {\n        this.setState({\n          date: date\n        })\n      }\n\n      onSubmit(e) {\n        e.preventDefault();\n    \n        const exercise = {\n          username: this.state.username,\n          description: this.state.description,\n          duration: this.state.duration,\n          date: this.state.date\n        }\n\n        console.log(exercise);\n\n        axios.post('http://localhost:5000/exercises/add', exercise)\n        .then(res => console.log(res.data));\n\n        // take the person back to our homepage, goes back to list of exercises. \n        window.location = '/';\n    }\n\n    render(){\n        return (\n            // standard HTML form\n        <div>\n        <h3>Create New Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\"> \n            <label>Username: </label>\n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                                    // getting the options from the users array\n                                    // this.state.users references all of the users in our mongo db\n                                    // .map allows us to return something for each user\n                                    // for each user in the array, it returns an option\n                                    this.state.users.map(function(user) {\n                                        return <option\n                                        key = {user}\n                                        value = {user} > {user}\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description: </label>\n                        <input type = \"text\"\n                            required\n                            className = \"form-control\"\n                            value = {this.state.description}\n                            onChange = {this.onChangeDescription}\n                            />\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Duration(in minutes): </label>\n                        <input type = \"text\"\n                            required\n                            className = \"form-control\"\n                            value = {this.state.duration}\n                            onChange = {this.onChangeDuration}\n                            />\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Date</label>\n                        <div>\n                            <DatePicker\n                                selected = {this.state.date}\n                                onChange = {this.onChangeDate}\n                                />\n                        </div>\n                    </div>\n\n                    <div className = \"form-group\">\n                        <input type = \"submit\" value = \"Create Exercise Log\" className = \"btn btn-primary\" />\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}